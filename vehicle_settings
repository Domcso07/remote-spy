-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local workspace = game:GetService("Workspace")

-- Vehicle folder
local vehicle_folder = workspace:WaitForChild("Vehicles")

-- Turbo Levels
local TurboLevels = {
    [1] = 16.1,
    [2] = 27.9,
    [3] = 44.5,
    [4] = 61.1
}

-- ===== GUI =====
local Gui = Instance.new("ScreenGui")
Gui.Name = "VehicleSettings"
Gui.IgnoreGuiInset = true
Gui.ResetOnSpawn = false
Gui.Parent = playerGui

local function styleButton(btn)
    btn.Size = UDim2.new(1,-8,0,28)
    btn.BackgroundColor3 = Color3.fromRGB(35,35,35)
    btn.TextColor3 = Color3.fromRGB(220,220,220)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)
    local stroke = Instance.new("UIStroke", btn)
    stroke.Color = Color3.fromRGB(60,60,60)
    stroke.Thickness = 1
    btn.MouseEnter:Connect(function() btn.BackgroundColor3 = Color3.fromRGB(50,50,50) end)
    btn.MouseLeave:Connect(function() btn.BackgroundColor3 = Color3.fromRGB(35,35,35) end)
end

-- Main Frame
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0.35, 0, 0.45, 0)
Frame.Position = UDim2.new(0.325, 0, 0.275, 0)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = Gui
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)
Instance.new("UIStroke", Frame).Color = Color3.fromRGB(70,70,70)

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1,0,0,36)
Title.BackgroundColor3 = Color3.fromRGB(45,45,45)
Title.Text = "ðŸš— Vehicle Settings"
Title.TextColor3 = Color3.new(1,1,1)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.Parent = Frame
Instance.new("UICorner", Title).CornerRadius = UDim.new(0,8)

-- Info Box
local InfoBox = Instance.new("Frame")
InfoBox.Size = UDim2.new(1,-10,0,50)
InfoBox.Position = UDim2.new(0,5,0,38)
InfoBox.BackgroundColor3 = Color3.fromRGB(25,25,25)
InfoBox.BorderSizePixel = 0
InfoBox.Parent = Frame
Instance.new("UICorner", InfoBox).CornerRadius = UDim.new(0,6)
Instance.new("UIStroke", InfoBox).Color = Color3.fromRGB(60,60,60)

-- Selected labels
local SelectedVehicleLbl = Instance.new("TextLabel")
SelectedVehicleLbl.Size = UDim2.new(1,-10,0,24)
SelectedVehicleLbl.Position = UDim2.new(0,5,0,2)
SelectedVehicleLbl.BackgroundTransparency = 1
SelectedVehicleLbl.Text = "Selected Vehicle: -"
SelectedVehicleLbl.TextColor3 = Color3.fromRGB(200,200,200)
SelectedVehicleLbl.Font = Enum.Font.Gotham
SelectedVehicleLbl.TextSize = 14
SelectedVehicleLbl.TextXAlignment = Enum.TextXAlignment.Left
SelectedVehicleLbl.TextWrapped = true
SelectedVehicleLbl.TextTruncate = Enum.TextTruncate.AtEnd
SelectedVehicleLbl.Parent = InfoBox

local SelectedValueLbl = Instance.new("TextLabel")
SelectedValueLbl.Size = UDim2.new(1,-10,0,20)
SelectedValueLbl.Position = UDim2.new(0,5,0,26)
SelectedValueLbl.BackgroundTransparency = 1
SelectedValueLbl.Text = "Selected Value: -"
SelectedValueLbl.TextColor3 = Color3.fromRGB(200,200,200)
SelectedValueLbl.Font = Enum.Font.Gotham
SelectedValueLbl.TextSize = 14
SelectedValueLbl.TextXAlignment = Enum.TextXAlignment.Left
SelectedValueLbl.TextTruncate = Enum.TextTruncate.AtEnd
SelectedValueLbl.Parent = InfoBox

-- Vehicle List
local VehicleList = Instance.new("ScrollingFrame")
VehicleList.Size = UDim2.new(0.4,-10,1,-100)
VehicleList.Position = UDim2.new(0,5,0,90)
VehicleList.BackgroundColor3 = Color3.fromRGB(25,25,25)
VehicleList.BorderSizePixel = 0
VehicleList.ScrollBarThickness = 6
VehicleList.Parent = Frame
Instance.new("UICorner", VehicleList).CornerRadius = UDim.new(0,6)
local UIListLayout_Vehicles = Instance.new("UIListLayout", VehicleList)
UIListLayout_Vehicles.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_Vehicles.Padding = UDim.new(0,6)
local UIPadding_Vehicles = Instance.new("UIPadding", VehicleList)
UIPadding_Vehicles.PaddingTop = UDim.new(0,6)
UIPadding_Vehicles.PaddingLeft = UDim.new(0,6)

-- Value List
local ValueList = Instance.new("ScrollingFrame")
ValueList.Position = UDim2.new(0.42,5,0,90)
ValueList.Size = UDim2.new(0.55,-10,0.55,-10)
ValueList.BackgroundColor3 = Color3.fromRGB(25,25,25)
ValueList.BorderSizePixel = 0
ValueList.ScrollBarThickness = 6
ValueList.Parent = Frame
ValueList.Name = "ValueList"
Instance.new("UICorner", ValueList).CornerRadius = UDim.new(0,6)
local UIListLayout_Values = Instance.new("UIListLayout", ValueList)
UIListLayout_Values.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_Values.Padding = UDim.new(0,6)
local UIPadding_Values = Instance.new("UIPadding", ValueList)
UIPadding_Values.PaddingTop = UDim.new(0,6)
UIPadding_Values.PaddingLeft = UDim.new(0,6)

-- Bottom Frame
local BottomFrame = Instance.new("Frame")
BottomFrame.Size = UDim2.new(0.55,-10,0.3,0)
BottomFrame.Position = UDim2.new(0.42,5,0.63,0)
BottomFrame.BackgroundTransparency = 1
BottomFrame.Parent = Frame

local ValueBox = Instance.new("TextBox")
ValueBox.Size = UDim2.new(1,0,0.45,0)
ValueBox.Position = UDim2.new(0,0,0,0)
ValueBox.PlaceholderText = ""
ValueBox.ClearTextOnFocus = false
ValueBox.BackgroundColor3 = Color3.fromRGB(20,20,20)
ValueBox.TextColor3 = Color3.fromRGB(255,255,255)
ValueBox.Font = Enum.Font.Gotham
ValueBox.Text = ""
ValueBox.TextSize = 16
ValueBox.Parent = BottomFrame
Instance.new("UICorner", ValueBox).CornerRadius = UDim.new(0,6)

local ApplyBtn = Instance.new("TextButton")
ApplyBtn.Size = UDim2.new(1,0,0.45,0)
ApplyBtn.Position = UDim2.new(0,0,0.55,0)
ApplyBtn.Text = "âœ” Apply"
ApplyBtn.BackgroundColor3 = Color3.fromRGB(0,140,255)
ApplyBtn.TextColor3 = Color3.new(1,1,1)
ApplyBtn.Font = Enum.Font.GothamBold
ApplyBtn.TextSize = 16
ApplyBtn.Parent = BottomFrame
Instance.new("UICorner", ApplyBtn).CornerRadius = UDim.new(0,6)
Instance.new("UIStroke", ApplyBtn).Color = Color3.fromRGB(200,200,200)

-- HUD toggle
local HudToggleBtn = Instance.new("TextButton")
HudToggleBtn.Size = UDim2.new(0.2,0,0,28)
HudToggleBtn.Position = UDim2.new(0.58,5,0.95,-28)
HudToggleBtn.Text = "HUD: OFF"
HudToggleBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
HudToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
HudToggleBtn.Font = Enum.Font.GothamBold
HudToggleBtn.TextSize = 14
HudToggleBtn.Parent = Frame
Instance.new("UICorner", HudToggleBtn).CornerRadius = UDim.new(0,6)

-- Flight Mode toggle
local FlightToggleBtn = Instance.new("TextButton")
FlightToggleBtn.Size = UDim2.new(0.2,0,0,28)
FlightToggleBtn.Position = UDim2.new(0.8,5,0.95,-28)
FlightToggleBtn.Text = "Flight: OFF"
FlightToggleBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
FlightToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
FlightToggleBtn.Font = Enum.Font.GothamBold
FlightToggleBtn.TextSize = 14
FlightToggleBtn.Parent = Frame
Instance.new("UICorner", FlightToggleBtn).CornerRadius = UDim.new(0,6)

-- Vars
local selectedVehicle = nil
local selectedValue = nil
local hudEnabled = false
local flightEnabled = false

-- HELI / Flight vars
local gyro, bv
local verticalInput = 0
local currentYaw = 0
local seated = false

-- === FUNCTIONS ===
local function resetHUD()
    hudEnabled = false
    HudToggleBtn.Text = "HUD: OFF"
    if selectedVehicle then
        local seat = selectedVehicle:FindFirstChild("Seats")
        if seat then
            local vehicleSeat = seat:FindFirstChild("VehicleSeat")
            if vehicleSeat then
                vehicleSeat.HeadsUpDisplay = false
            end
        end
    end
end

local function clearFlight()
    if gyro then gyro:Destroy() end
    if bv then bv:Destroy() end
    gyro, bv = nil, nil
    flightEnabled = false
    FlightToggleBtn.Text = "Flight: OFF"
end

local function setupFlight()
    if not selectedVehicle then return end
    local seat = selectedVehicle:FindFirstChild("Seats")
    if not seat then return end
    local vehicleSeat = seat:FindFirstChild("VehicleSeat")
    if not vehicleSeat then return end
    local body = selectedVehicle.PrimaryPart

    -- BodyGyro
    gyro = body:FindFirstChild("HeliGyro")
    if not gyro then
        gyro = Instance.new("BodyGyro")
        gyro.Name = "HeliGyro"
        gyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
        gyro.P = 1e4
        gyro.CFrame = body.CFrame
        gyro.Parent = body
    end

    -- BodyVelocity
    bv = body:FindFirstChild("HeliVelocity")
    if not bv then
        bv = Instance.new("BodyVelocity")
        bv.Name = "HeliVelocity"
        bv.MaxForce = Vector3.new(1e5,1e5,1e5)
        bv.P = 1e4
        bv.Velocity = Vector3.zero
        bv.Parent = body
    end

    flightEnabled = true
    FlightToggleBtn.Text = "Flight: ON"
end

local function updateValueList(model)
    for _,child in ipairs(ValueList:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    selectedValue = nil
    local seat = model:FindFirstChild("Seats")
    if not seat then return end
    local vehicleSeat = seat:FindFirstChild("VehicleSeat")
    if not vehicleSeat then return end
    for _,obj in ipairs(vehicleSeat:GetChildren()) do
        if obj:IsA("StringValue") or obj:IsA("NumberValue") then
            if obj.Name == "Turbo" or obj.Name == "MaxSpeed" then
                local btn = Instance.new("TextButton")
                if obj.Name == "Turbo" then
                    local levelsText = {}
                    for k,v in pairs(TurboLevels) do table.insert(levelsText,k..":"..v) end
                    btn.Text = obj.Name.." = "..tostring(obj.Value).." (Levels: "..table.concat(levelsText,", ")..")"
                else
                    btn.Text = obj.Name.." = "..tostring(obj.Value)
                end
                btn.Parent = ValueList
                styleButton(btn)
                btn.MouseButton1Click:Connect(function()
                    selectedValue = obj
                    ValueBox.Text = tostring(obj.Value)
                    SelectedValueLbl.Text = "Selected Value: " .. obj.Name
                    resetHUD()
                end)
            end
        end
    end
end

local function updateVehicleList()
    for _,child in ipairs(VehicleList:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    for _,vehicle in ipairs(vehicle_folder:GetChildren()) do
        if vehicle:IsA("Model") and string.find(vehicle.Name,"Car") then
            local btn = Instance.new("TextButton")
            btn.Text = vehicle.Name
            btn.Parent = VehicleList
            styleButton(btn)
            btn.MouseButton1Click:Connect(function()
                selectedVehicle = vehicle
                SelectedVehicleLbl.Text = "Selected Vehicle: "..vehicle.Name
                updateValueList(vehicle)
                resetHUD()
                clearFlight()
            end)
        end
    end
end

-- Apply button
ApplyBtn.MouseButton1Click:Connect(function()
    if selectedValue then
        if selectedValue:IsA("StringValue") then
            selectedValue.Value = ValueBox.Text
        elseif selectedValue:IsA("NumberValue") then
            local num = tonumber(ValueBox.Text)
            if num then
                selectedValue.Value = num
            end
        end
        SelectedValueLbl.Text = "Selected Value: "..selectedValue.Name.." = "..tostring(selectedValue.Value)
        updateValueList(selectedVehicle)
    end
end)

-- HUD toggle
HudToggleBtn.MouseButton1Click:Connect(function()
    hudEnabled = not hudEnabled
    HudToggleBtn.Text = hudEnabled and "HUD: ON" or "HUD: OFF"
    if selectedVehicle then
        local seat = selectedVehicle:FindFirstChild("Seats")
        if seat then
            local vehicleSeat = seat:FindFirstChild("VehicleSeat")
            if vehicleSeat then
                vehicleSeat.HeadsUpDisplay = hudEnabled
            end
        end
    end
end)

-- Flight toggle
FlightToggleBtn.MouseButton1Click:Connect(function()
    if not selectedVehicle then return end
    if flightEnabled then
        clearFlight()
    else
        setupFlight()
    end
end)

-- Scroll updates
UIListLayout_Vehicles:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    VehicleList.CanvasSize = UDim2.new(0,0,0,UIListLayout_Vehicles.AbsoluteContentSize.Y + 10)
end)
UIListLayout_Values:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    ValueList.CanvasSize = UDim2.new(0,0,0,UIListLayout_Values.AbsoluteContentSize.Y + 10)
end)

-- ====== Flight Controls ======
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if not flightEnabled then return end
    if input.KeyCode == Enum.KeyCode.E then verticalInput = 1
    elseif input.KeyCode == Enum.KeyCode.Q then verticalInput = -1 end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.E or input.KeyCode == Enum.KeyCode.Q then
        verticalInput = 0
    end
end)

RunService.RenderStepped:Connect(function(dt)
    if not flightEnabled or not selectedVehicle then return end
    local seat = selectedVehicle:FindFirstChild("Seats")
    if not seat then return end
    local vehicleSeat = seat:FindFirstChild("VehicleSeat")
    if not vehicleSeat then return end
    local body = selectedVehicle.PrimaryPart
    local throttle = vehicleSeat.Throttle or 0
    local steer = vehicleSeat.Steer or 0

    -- Yaw
    currentYaw -= steer * 2 * dt
    local baseCFrame = CFrame.new(body.Position) * CFrame.Angles(0,currentYaw,0)
    gyro.CFrame = baseCFrame

    -- Movement
    local forwardVel = baseCFrame.LookVector * (throttle * 100)
    local verticalVel = Vector3.new(0, verticalInput * 50, 0)
    local targetVel = forwardVel + verticalVel
    bv.Velocity = bv.Velocity:Lerp(targetVel, math.clamp(dt * 5,0,1))
end)

-- Initial
updateVehicleList()
